
//import static com.sun.xml.internal.fastinfoset.alphabet.BuiltInRestrictedAlphabets.table;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import Project.ConncetionProvider;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author gagan
 */
public class BOOKS extends javax.swing.JFrame {

    private Object jTextFieldPubyear;

    /**
     * Creates new form BOOKS
     */
    public BOOKS() {
        initComponents();
         DefaultTableModel model=( DefaultTableModel)jTableBooks.getModel();
        
        try
                {
                     Connection con=ConncetionProvider.getCon();
						String query="select * from BOOKS";
						PreparedStatement pst1=con.prepareStatement(query);
						ResultSet rs=pst1.executeQuery();
                    
                    while(rs.next())
                    {
                       model.addRow(new Object[]{rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6)});
                    }
                    
                }
            catch(Exception e)
                    {
                        
                    }
         DefaultTableModel mode2=( DefaultTableModel)jTableAUTHORS.getModel();
        
        try
                {
                     Connection con=ConncetionProvider.getCon();
						String query="select AUTHOR_ID,AUTHOR_NAME from BOOK_AUTHOR";
						PreparedStatement pst1=con.prepareStatement(query);
						ResultSet rs=pst1.executeQuery();
                    
                    while(rs.next())
                    {
                       mode2.addRow(new Object[]{rs.getString(1),rs.getString(2)});
                    }
                    
                }
            catch(Exception e)
                    {
                        
                    }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelBookID = new javax.swing.JLabel();
        jLabelPrice = new javax.swing.JLabel();
        jLabelPubYear = new javax.swing.JLabel();
        jLabelBookName = new javax.swing.JLabel();
        jLabelAuthorID = new javax.swing.JLabel();
        jLabelQuantity = new javax.swing.JLabel();
        jTextFieldBookID = new javax.swing.JTextField();
        jTextFieldPrice = new javax.swing.JTextField();
        jTextFieldPubYear = new javax.swing.JTextField();
        jTextFieldBookName = new javax.swing.JTextField();
        jTextFieldAuthorID = new javax.swing.JTextField();
        jTextFieldQuantity = new javax.swing.JTextField();
        jButtonADD = new javax.swing.JButton();
        jButtonVIEW = new javax.swing.JButton();
        jButtonRESET = new javax.swing.JButton();
        jButtonDELETE = new javax.swing.JButton();
        jButtonEXIT = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableBooks = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableAUTHORS = new javax.swing.JTable();
        jButtonUPDATE = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(350, 200));
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabelBookID.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabelBookID.setText("Book ID");
        getContentPane().add(jLabelBookID, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 80, -1, -1));

        jLabelPrice.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabelPrice.setText("Price");
        getContentPane().add(jLabelPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 130, -1, -1));

        jLabelPubYear.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabelPubYear.setText("Pub Year");
        getContentPane().add(jLabelPubYear, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 180, -1, -1));

        jLabelBookName.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabelBookName.setText("Book Name");
        getContentPane().add(jLabelBookName, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 240, -1, -1));

        jLabelAuthorID.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabelAuthorID.setText("Author ID");
        getContentPane().add(jLabelAuthorID, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 310, -1, -1));

        jLabelQuantity.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabelQuantity.setText("Quantity");
        getContentPane().add(jLabelQuantity, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 370, -1, -1));

        jTextFieldBookID.setBackground(new java.awt.Color(255, 255, 204));
        getContentPane().add(jTextFieldBookID, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 80, 200, -1));

        jTextFieldPrice.setBackground(new java.awt.Color(255, 255, 204));
        jTextFieldPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldPriceActionPerformed(evt);
            }
        });
        getContentPane().add(jTextFieldPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 130, 200, -1));

        jTextFieldPubYear.setBackground(new java.awt.Color(255, 255, 204));
        getContentPane().add(jTextFieldPubYear, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 180, 200, -1));

        jTextFieldBookName.setBackground(new java.awt.Color(255, 255, 204));
        getContentPane().add(jTextFieldBookName, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 240, 200, -1));

        jTextFieldAuthorID.setBackground(new java.awt.Color(255, 255, 204));
        getContentPane().add(jTextFieldAuthorID, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 300, 200, -1));

        jTextFieldQuantity.setBackground(new java.awt.Color(255, 255, 204));
        getContentPane().add(jTextFieldQuantity, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 370, 200, -1));

        jButtonADD.setBackground(new java.awt.Color(255, 255, 204));
        jButtonADD.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButtonADD.setIcon(new javax.swing.ImageIcon(getClass().getResource("/add.png"))); // NOI18N
        jButtonADD.setText("ADD");
        jButtonADD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonADDActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonADD, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 460, -1, -1));

        jButtonVIEW.setBackground(new java.awt.Color(255, 255, 204));
        jButtonVIEW.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButtonVIEW.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view.png"))); // NOI18N
        jButtonVIEW.setText("VIEW");
        jButtonVIEW.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVIEWActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonVIEW, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 460, -1, -1));

        jButtonRESET.setBackground(new java.awt.Color(255, 255, 204));
        jButtonRESET.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButtonRESET.setIcon(new javax.swing.ImageIcon(getClass().getResource("/reset.png"))); // NOI18N
        jButtonRESET.setText("RESET");
        jButtonRESET.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRESETActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonRESET, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 460, -1, -1));

        jButtonDELETE.setBackground(new java.awt.Color(255, 255, 204));
        jButtonDELETE.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButtonDELETE.setIcon(new javax.swing.ImageIcon(getClass().getResource("/delete.png"))); // NOI18N
        jButtonDELETE.setText("DELETE");
        jButtonDELETE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDELETEActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonDELETE, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 460, -1, -1));

        jButtonEXIT.setBackground(new java.awt.Color(255, 255, 204));
        jButtonEXIT.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButtonEXIT.setIcon(new javax.swing.ImageIcon(getClass().getResource("/exit1.png"))); // NOI18N
        jButtonEXIT.setText("EXIT");
        jButtonEXIT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEXITActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonEXIT, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 460, -1, -1));

        jTableBooks.setBackground(new java.awt.Color(255, 255, 204));
        jTableBooks.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTableBooks.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "BOOK_ID", "PRICE", "PUB_YEAR", "BOOK_NAME", "AUTHOR_ID", "QUANTITY"
            }
        ));
        jScrollPane1.setViewportView(jTableBooks);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 80, 500, 320));

        jTableAUTHORS.setBackground(new java.awt.Color(255, 255, 204));
        jTableAUTHORS.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTableAUTHORS.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "AUTHOR_ID", "AUTHOR_NAME"
            }
        ));
        jScrollPane2.setViewportView(jTableAUTHORS);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 80, 350, 320));

        jButtonUPDATE.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButtonUPDATE.setIcon(new javax.swing.ImageIcon(getClass().getResource("/return book png.png"))); // NOI18N
        jButtonUPDATE.setText("UPDATE BOOK QUANTITY");
        jButtonUPDATE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUPDATEActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonUPDATE, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 460, -1, -1));

        jLabel1.setFont(new java.awt.Font("Colonna MT", 1, 18)); // NOI18N
        jLabel1.setText("BOOKS");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(626, 46, -1, -1));

        jLabel2.setFont(new java.awt.Font("Colonna MT", 1, 18)); // NOI18N
        jLabel2.setText("AUTHORS");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 50, -1, -1));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/123456 - Copy.png"))); // NOI18N
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1270, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonADDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonADDActionPerformed
        // TODO add your handling code here:
          String book_id = jTextFieldBookID.getText();
            String price = jTextFieldPrice.getText();
            String pubyear = jTextFieldPubYear.getText();
            String bookname = jTextFieldBookName.getText();
            String authorid =jTextFieldAuthorID.getText(); 
            String Quantity=jTextFieldQuantity.getText();
		try {
                        Class.forName("oracle.jdbc.driver.OracleDriver");
                        Connection con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe","disha","gagan");
				        
                        String sql = "Insert Into BOOKS values('"+book_id+"','"+price+"','"+pubyear+"','"+bookname+"','"+authorid+"','"+Quantity+"')";
                        PreparedStatement pst=con.prepareStatement(sql);
                        ResultSet rs=pst.executeQuery();
                        JOptionPane.showMessageDialog(null,"Data inserted succesfully");
				       		       
                    } 
                catch(Exception e) {
                    System.out.println(e);
                    JOptionPane.showMessageDialog(null,"Book alreay exit or Authorid not Availabel(Check the format of Authorid and Bookid)");			
                }
         
				       		       
                   
			
    }//GEN-LAST:event_jButtonADDActionPerformed

    private void jButtonVIEWActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVIEWActionPerformed
        // TODO add your handling code here:
          try 
				{
                                        Connection con=ConncetionProvider.getCon();
					String query="SELECT * from books";
					PreparedStatement pst1=con.prepareStatement(query);
					ResultSet rs=pst1.executeQuery();
					jTableBooks.setModel(DbUtils.resultSetToTableModel(rs));
				}
				catch (Exception e) 
				{
					e.printStackTrace();
				}
    }//GEN-LAST:event_jButtonVIEWActionPerformed

    private void jButtonRESETActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRESETActionPerformed
        // TODO add your handling code here:
          jTextFieldAuthorID.setText(null);
			jTextFieldBookID.setText(null);
			jTextFieldBookName.setText(null);
			jTextFieldPrice.setText(null);
			jTextFieldPubYear.setText(null);
                        jTextFieldQuantity.setText(null);
    }//GEN-LAST:event_jButtonRESETActionPerformed

    private void jButtonDELETEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDELETEActionPerformed
        // TODO add your handling code here:
         int row = jTableBooks.getSelectedRow();
				System.out.println(row);
				String cell =jTableBooks.getModel().getValueAt(row, 0).toString();
				String query="delete from BOOKS where BOOK_ID='"+cell+"'";
				System.out.println(query);
				
				
				try 
				{
                                        Connection con=ConncetionProvider.getCon();	
                                        PreparedStatement pst2=con.prepareStatement(query);
					pst2.executeQuery();
					JOptionPane.showMessageDialog(null,"Row Deleted Successful");
				}
				catch (Exception e) 
				{
					e.printStackTrace();
                                } 
    }//GEN-LAST:event_jButtonDELETEActionPerformed

    private void jButtonEXITActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEXITActionPerformed
        // TODO add your handling code here:
        setVisible(false);
    }//GEN-LAST:event_jButtonEXITActionPerformed

    private void jTextFieldPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldPriceActionPerformed

    private void jButtonUPDATEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUPDATEActionPerformed
        // TODO add your handling code here:
      
          String Quantity=jTextFieldQuantity.getText();
          String book_id = jTextFieldBookID.getText();
           
          
            try 
					{
                                                Connection con=ConncetionProvider.getCon();
						String query="UPDATE BOOKS  B SET B.Quantity=B.Quantity +'"+Quantity+"' WHERE BOOK_ID='"+book_id+"'";;
						PreparedStatement pst1=con.prepareStatement(query);
						ResultSet rs=pst1.executeQuery();
                                                JOptionPane.showMessageDialog(null,"UPDATED Successfully");
						
					}
					catch (Exception e) 
					{
						e.printStackTrace();
					}
    }//GEN-LAST:event_jButtonUPDATEActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BOOKS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BOOKS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BOOKS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BOOKS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BOOKS().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonADD;
    private javax.swing.JButton jButtonDELETE;
    private javax.swing.JButton jButtonEXIT;
    private javax.swing.JButton jButtonRESET;
    private javax.swing.JButton jButtonUPDATE;
    private javax.swing.JButton jButtonVIEW;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabelAuthorID;
    private javax.swing.JLabel jLabelBookID;
    private javax.swing.JLabel jLabelBookName;
    private javax.swing.JLabel jLabelPrice;
    private javax.swing.JLabel jLabelPubYear;
    private javax.swing.JLabel jLabelQuantity;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableAUTHORS;
    private javax.swing.JTable jTableBooks;
    private javax.swing.JTextField jTextFieldAuthorID;
    private javax.swing.JTextField jTextFieldBookID;
    private javax.swing.JTextField jTextFieldBookName;
    private javax.swing.JTextField jTextFieldPrice;
    private javax.swing.JTextField jTextFieldPubYear;
    private javax.swing.JTextField jTextFieldQuantity;
    // End of variables declaration//GEN-END:variables
}
