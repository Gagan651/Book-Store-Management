
import Project.ConncetionProvider;
import static java.lang.String.valueOf;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;
//import static com.sun.xml.internal.fastinfoset.alphabet.BuiltInRestrictedAlphabets.table;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author gagan
 */
public class PURCHASE extends javax.swing.JFrame {

    /**
     * Creates new form PURCHASE
     */
    public PURCHASE() {
        initComponents();
          DefaultTableModel model=( DefaultTableModel)jTablePURCHASE.getModel();
        
        try
                {
                     Connection con=ConncetionProvider.getCon();
						String query="select * from PURCHASE";
						PreparedStatement pst1=con.prepareStatement(query);
						ResultSet rs=pst1.executeQuery();
                    
                    while(rs.next())
                    {
                       model.addRow(new Object[]{rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4)});
                    }
                    
                }
            catch(Exception e)
                    {
                        
                    }
           DefaultTableModel mode2=( DefaultTableModel)jTableCUSTOMER.getModel();
         try
                {
                     Connection con=ConncetionProvider.getCon();
						String query="select CUSTOMER_ID,CUSTOMER_NAME from CUSTOMER";
						PreparedStatement pst1=con.prepareStatement(query);
						ResultSet rs=pst1.executeQuery();
                                                
                                             
                    
                                             
                    while(rs.next())
                    {
                       mode2.addRow(new Object[]{rs.getString(1),rs.getString(2)});
                    }
                   
                 
                }
            catch(Exception e)
                    {
                        
                    }
          DefaultTableModel mode3=( DefaultTableModel)jTableBOOKS.getModel();
         try
                {
                     Connection con=ConncetionProvider.getCon();
						String query="select BOOK_ID,PRICE,BOOK_NAME,AUTHOR_ID,QUANTITY from BOOKS";
						PreparedStatement pst1=con.prepareStatement(query);
						ResultSet rs=pst1.executeQuery();
                                                
                                             
                    
                                             
                    while(rs.next())
                    {
                       mode3.addRow(new Object[]{rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5)});
                    }
                   
                 
                }
            catch(Exception e)
                    {
                        
                    }
        
    
      
						
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1CID = new javax.swing.JLabel();
        jLabel2BookID = new javax.swing.JLabel();
        jLabel3Quantity = new javax.swing.JLabel();
        jLabel4TOTALPRICE = new javax.swing.JLabel();
        jTextFieldCID = new javax.swing.JTextField();
        jTextFieldBookID = new javax.swing.JTextField();
        jTextFieldQuantity = new javax.swing.JTextField();
        jTextFieldTOTALPRICE = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTablePURCHASE = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableCUSTOMER = new javax.swing.JTable();
        jButtonADD = new javax.swing.JButton();
        jButtonVIEW = new javax.swing.JButton();
        jButtonRESET = new javax.swing.JButton();
        jButtonUPDATE = new javax.swing.JButton();
        jButtonDELETE = new javax.swing.JButton();
        jButtonEXIT = new javax.swing.JButton();
        jButtonFETCHPAYMENT = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableBOOKS = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jButtonREFRESHBOOKS = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(350, 200));
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1CID.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1CID.setText("CUSTOMER ID");
        getContentPane().add(jLabel1CID, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 90, -1, -1));

        jLabel2BookID.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2BookID.setText("BOOK ID");
        getContentPane().add(jLabel2BookID, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 140, -1, -1));

        jLabel3Quantity.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3Quantity.setText("QUANTITY");
        getContentPane().add(jLabel3Quantity, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 190, -1, -1));

        jLabel4TOTALPRICE.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4TOTALPRICE.setText("TOTAL PRICE");
        getContentPane().add(jLabel4TOTALPRICE, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 240, -1, -1));

        jTextFieldCID.setBackground(new java.awt.Color(255, 255, 204));
        getContentPane().add(jTextFieldCID, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 90, 200, -1));

        jTextFieldBookID.setBackground(new java.awt.Color(255, 255, 204));
        jTextFieldBookID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldBookIDActionPerformed(evt);
            }
        });
        getContentPane().add(jTextFieldBookID, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 140, 200, -1));

        jTextFieldQuantity.setBackground(new java.awt.Color(255, 255, 204));
        jTextFieldQuantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldQuantityActionPerformed(evt);
            }
        });
        getContentPane().add(jTextFieldQuantity, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 190, 200, -1));

        jTextFieldTOTALPRICE.setBackground(new java.awt.Color(255, 255, 204));
        jTextFieldTOTALPRICE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldTOTALPRICEActionPerformed(evt);
            }
        });
        getContentPane().add(jTextFieldTOTALPRICE, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 240, 200, -1));

        jTablePURCHASE.setBackground(new java.awt.Color(255, 255, 204));
        jTablePURCHASE.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTablePURCHASE.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CUSTOMER_ID", "BOOK_ID", "QUANTITY", "TOTALPRICE"
            }
        ));
        jTablePURCHASE.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                jTablePURCHASEAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jScrollPane1.setViewportView(jTablePURCHASE);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 40, -1, 260));

        jTableCUSTOMER.setBackground(new java.awt.Color(255, 255, 204));
        jTableCUSTOMER.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTableCUSTOMER.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CUSTOMER_ID", "CUSTOMER_NAME"
            }
        ));
        jScrollPane2.setViewportView(jTableCUSTOMER);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 40, 410, 260));

        jButtonADD.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButtonADD.setIcon(new javax.swing.ImageIcon(getClass().getResource("/add.png"))); // NOI18N
        jButtonADD.setText("ADD");
        jButtonADD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonADDActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonADD, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 360, -1, -1));

        jButtonVIEW.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButtonVIEW.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view.png"))); // NOI18N
        jButtonVIEW.setText("VIEW");
        jButtonVIEW.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVIEWActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonVIEW, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 360, -1, -1));

        jButtonRESET.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButtonRESET.setIcon(new javax.swing.ImageIcon(getClass().getResource("/reset.png"))); // NOI18N
        jButtonRESET.setText("RESET");
        jButtonRESET.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRESETActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonRESET, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 360, -1, -1));

        jButtonUPDATE.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButtonUPDATE.setIcon(new javax.swing.ImageIcon(getClass().getResource("/return book png.png"))); // NOI18N
        jButtonUPDATE.setText("UPDATE");
        jButtonUPDATE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUPDATEActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonUPDATE, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 360, -1, -1));

        jButtonDELETE.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButtonDELETE.setIcon(new javax.swing.ImageIcon(getClass().getResource("/delete.png"))); // NOI18N
        jButtonDELETE.setText("DELETE");
        jButtonDELETE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDELETEActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonDELETE, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 360, -1, -1));

        jButtonEXIT.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButtonEXIT.setIcon(new javax.swing.ImageIcon(getClass().getResource("/exit1.png"))); // NOI18N
        jButtonEXIT.setText("EXIT");
        jButtonEXIT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEXITActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonEXIT, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 360, -1, -1));

        jButtonFETCHPAYMENT.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButtonFETCHPAYMENT.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fetch.png"))); // NOI18N
        jButtonFETCHPAYMENT.setText("FETCH PAYMENT");
        jButtonFETCHPAYMENT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFETCHPAYMENTActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonFETCHPAYMENT, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 440, -1, -1));

        jLabel4.setFont(new java.awt.Font("Colonna MT", 1, 18)); // NOI18N
        jLabel4.setText("PURCHASE");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 20, -1, -1));

        jLabel5.setFont(new java.awt.Font("Colonna MT", 1, 18)); // NOI18N
        jLabel5.setText("CUSTOMER");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 20, -1, 20));

        jTableBOOKS.setBackground(new java.awt.Color(255, 255, 204));
        jTableBOOKS.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTableBOOKS.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "BOOK_ID", "PRICE", "BOOK_NAME", "AUTHOR_ID", "QUANTITY"
            }
        ));
        jScrollPane3.setViewportView(jTableBOOKS);

        getContentPane().add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 330, 410, 230));

        jLabel1.setFont(new java.awt.Font("Colonna MT", 1, 18)); // NOI18N
        jLabel1.setText("BOOKS");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 310, -1, -1));

        jButtonREFRESHBOOKS.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButtonREFRESHBOOKS.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons8-rotate-right-30.png"))); // NOI18N
        jButtonREFRESHBOOKS.setText("REFRESH BOOKS");
        jButtonREFRESHBOOKS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonREFRESHBOOKSActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonREFRESHBOOKS, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 440, -1, 30));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/123456 - Copy.png"))); // NOI18N
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldBookIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldBookIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldBookIDActionPerformed

    private void jTextFieldQuantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldQuantityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldQuantityActionPerformed

    private void jButtonADDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonADDActionPerformed
        // TODO add your handling code here:
        String book_id = jTextFieldBookID.getText();
        String Quantity = jTextFieldQuantity.getText();
        String TOTALPRICE = jTextFieldTOTALPRICE.getText();
        String CID = jTextFieldCID.getText();
        try {
                        
			Class.forName("oracle.jdbc.driver.OracleDriver");
			Connection con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe","disha","gagan");
				        
			
                        String sql="INSERT INTO PURCHASE (CUSTOMER_ID,book_id,Quantity,TOTALPRICE)VALUES('"+CID+"','"+book_id+"','"+Quantity+"','"+TOTALPRICE+"')";
                        PreparedStatement pst=con.prepareStatement(sql);
			ResultSet rs=pst.executeQuery();
			JOptionPane.showMessageDialog(null,"Data Inserted Successfully");
				       		       
				    } catch(Exception e) 
                                    {
                                        System.out.println(e);
                    JOptionPane.showMessageDialog(null,"customer already exit or invalid customer id or invalid bookid");
				}
    }//GEN-LAST:event_jButtonADDActionPerformed

    private void jButtonFETCHPAYMENTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFETCHPAYMENTActionPerformed
        // TODO add your handling code here:
                                          
                                             String CID = jTextFieldCID.getText();
                                           String BOOK_ID = jTextFieldBookID.getText();
                                           String Quantity1=jTextFieldQuantity.getText();
                                           int Quantity=Integer.parseInt(Quantity1);
                                               
         try 
				{
                                        Connection con=ConncetionProvider.getCon();                        
					String query="select price from BOOKS ,CUSTOMER C WHERE C.CUSTOMER_ID='"+CID+"' AND BOOKS.BOOK_ID='"+BOOK_ID+"'AND BOOKS.Quantity>'"+Quantity1+"'";
					PreparedStatement pst3=con.prepareStatement(query);
					ResultSet rs=pst3.executeQuery(query);
                                       if(rs.next()){
                                           int price=Quantity*rs.getInt("price");
                                           
                                         jTextFieldTOTALPRICE.setText(valueOf(price));
                                       }
                                       else{
                                           JOptionPane.showMessageDialog(null,"NOT AVAILABLE");
                                       }
				}
				catch (Exception e) 
				{
					e.printStackTrace();
				}
          
                                          
    }//GEN-LAST:event_jButtonFETCHPAYMENTActionPerformed

    private void jButtonVIEWActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVIEWActionPerformed
        // TODO add your handling code here:
          try 
	{
            Connection con=ConncetionProvider.getCon();
            String query="select * from PURCHASE";
            PreparedStatement pst1=con.prepareStatement(query);
            ResultSet rs=pst1.executeQuery();
            jTablePURCHASE.setModel(DbUtils.resultSetToTableModel(rs));
	}
            catch (Exception e) 
		{
                    e.printStackTrace();
		}
                      
        
       
    }//GEN-LAST:event_jButtonVIEWActionPerformed

    private void jTablePURCHASEAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jTablePURCHASEAncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_jTablePURCHASEAncestorAdded

    private void jButtonRESETActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRESETActionPerformed
        // TODO add your handling code here:
           
        jTextFieldQuantity.setText(null);
            jTextFieldTOTALPRICE.setText(null);
            jTextFieldBookID.setText(null);
                jTextFieldCID.setText(null);
            
    }//GEN-LAST:event_jButtonRESETActionPerformed

    private void jButtonUPDATEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUPDATEActionPerformed
        // TODO add your handling code here:
         String CID = jTextFieldCID.getText();
          String Quantity2=jTextFieldQuantity.getText();
           int Quantity=Integer.parseInt(Quantity2);
           String BOOK_ID = jTextFieldBookID.getText();
          
            try 
					{
                                                Connection con=ConncetionProvider.getCon();
						String query="UPDATE BOOKS  B SET B.Quantity=B.Quantity -'"+Quantity2+"' WHERE BOOK_ID='"+BOOK_ID+"'";
						PreparedStatement pst1=con.prepareStatement(query);
						ResultSet rs=pst1.executeQuery();
                                                JOptionPane.showMessageDialog(null,"UPDATED Successfully");
						
					}
					catch (Exception e) 
					{
						e.printStackTrace();
					}
        
    }//GEN-LAST:event_jButtonUPDATEActionPerformed

    private void jButtonDELETEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDELETEActionPerformed
        // TODO add your handling code here:
         int row = jTablePURCHASE.getSelectedRow();
				System.out.println(row);
				String cell = jTablePURCHASE.getModel().getValueAt(row, 0).toString();
				String query="delete from PURCHASE where CUSTOMER_ID='"+cell+"'";
				System.out.println(query);
				
				
				try 
				{
                                        Connection con=ConncetionProvider.getCon();
					PreparedStatement pst2=con.prepareStatement(query);
					pst2.executeQuery();
					JOptionPane.showMessageDialog(null,"Row Deleted Successful");
				}
				catch (Exception e) 
				{
					e.printStackTrace();
				}
                                               
    }//GEN-LAST:event_jButtonDELETEActionPerformed

    private void jButtonEXITActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEXITActionPerformed
        // TODO add your handling code here:
           setVisible(false);
    }//GEN-LAST:event_jButtonEXITActionPerformed

    private void jTextFieldTOTALPRICEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldTOTALPRICEActionPerformed
                 // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldTOTALPRICEActionPerformed

    private void jButtonREFRESHBOOKSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonREFRESHBOOKSActionPerformed
        // TODO add your handling code here:
          try 
				{
                                        Connection con=ConncetionProvider.getCon();
					String query="SELECT BOOK_ID,PRICE,BOOK_NAME,AUTHOR_ID,QUANTITY FROM books";
					PreparedStatement pst1=con.prepareStatement(query);
					ResultSet rs=pst1.executeQuery();
					jTableBOOKS.setModel(DbUtils.resultSetToTableModel(rs));
				}
				catch (Exception e) 
				{
					e.printStackTrace();
				}
                                       
    }//GEN-LAST:event_jButtonREFRESHBOOKSActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PURCHASE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PURCHASE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PURCHASE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PURCHASE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PURCHASE().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonADD;
    private javax.swing.JButton jButtonDELETE;
    private javax.swing.JButton jButtonEXIT;
    private javax.swing.JButton jButtonFETCHPAYMENT;
    private javax.swing.JButton jButtonREFRESHBOOKS;
    private javax.swing.JButton jButtonRESET;
    private javax.swing.JButton jButtonUPDATE;
    private javax.swing.JButton jButtonVIEW;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel1CID;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel2BookID;
    private javax.swing.JLabel jLabel3Quantity;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel4TOTALPRICE;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTableBOOKS;
    private javax.swing.JTable jTableCUSTOMER;
    private javax.swing.JTable jTablePURCHASE;
    private javax.swing.JTextField jTextFieldBookID;
    private javax.swing.JTextField jTextFieldCID;
    private javax.swing.JTextField jTextFieldQuantity;
    private javax.swing.JTextField jTextFieldTOTALPRICE;
    // End of variables declaration//GEN-END:variables
}
